name: Release of R package

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'New version type [major | minor | patch]'
        required: true
        default: 'patch'
jobs:
  bumpVersion:
    runs-on: ubuntu-20.04
    steps:
      - run: |
          echo "New version type: ${{ github.event.inputs.type }}"

      - name: Branch Protection Bot - Temporarily disable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@1.0.7
        if: always()
        with:
          access_token: ${{ secrets.GH_RELEASE_TOKEN }}
          enforce_admins: false
          branch: master

      - name: Setup checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_RELEASE_TOKEN }}

      - name: Config git
        run: |
          git config --local user.email "62586190+process-analytics-bot@users.noreply.github.com"
          git config --local user.name "process-analytics-bot"
          git config pull.rebase true

      - name: Checkout master
        run: git checkout master && git pull --tag

      - name: Read version from DESCRIPTION and set version variables
        run: |
          VER=$(grep Version DESCRIPTION | sed 's/Version: \(.*\).9000/\1/g')
          echo "CURRENT_VERSION=$VER" >> $GITHUB_ENV

      - name: Generate new version from tag
        id: release_version
        uses: zwaldowski/semver-release-action@v3
        with:
          dry_run: true
          bump: ${{ env.type }}
          prefix: v
          github_token: ${{ secrets.GH_RELEASE_TOKEN }}

      - name: Get release version
        run: |
          VER=$(echo steps.release_version.outputs.version | sed 's/v\(.*\)/\1/g')
          echo "RELEASE_VERSION=$VER" >> $GITHUB_ENV

      - name: Update README.md with the release version
        run: |-
          sed -i -E 's/${{ env.CURRENT_VERSION }}/${{ env.RELEASE_VERSION }}/g' README.md

      - name: Update DESCRIPTION with the release version
        run: |-
          sed -i -E 's/Version: "(.*)"/Version: "${{ env.RELEASE_VERSION }}"/g' DESCRIPTION

      - name: Commit with the release version
        run: |
          git add README.md
          git add DESCRIPTION
          git commit -m "[RELEASE] Set the release version to ${{ env.RELEASE_VERSION }}"
          git push

      - name: Tag ${{ steps.release_version.outputs.version }}
        run: |
          git tag -a v${{ env.RELEASE_VERSION }} -m "[RELEASE] ${{ env.RELEASE_VERSION }}"

      - name: Push Version
        run: git push && git push --tags

      - name: Update DESCRIPTION with the development version
        run: |-
          sed -i -E 's/Version: "(.*)"/Version: "${{ env.RELEASE_VERSION }}.9000"/g' DESCRIPTION

      - name: Commit with the development version
        run: |
          git add DESCRIPTION
          git commit -m "[RELEASE] Set the development version to ${{ env.RELEASE_VERSION }}.9000"
          git push

      - name: Branch Protection Bot - Reenable "include administrators" branch protection
        uses: benjefferies/branch-protection-bot@1.0.7
        if: always()  # Force to always run this step to ensure "include administrators" is always turned back on
        with:
          access_token: ${{ secrets.GH_RELEASE_TOKEN }}
          enforce_admins: true
          branch: master
